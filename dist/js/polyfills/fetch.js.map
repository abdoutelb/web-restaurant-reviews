{"version":3,"sources":["fetch.js"],"names":["Headers","Request","Response","fetch","support","searchParams","self","iterable","Symbol","blob","e","formData","arrayBuffer","isDataView","obj","DataView","prototype","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","normalizeName","name","String","indexOf","Object","toString","call","toLowerCase","test","value","normalizeValue","next","iteratorFor","items","iterator","undefined","headers","this","map","Array","header","forEach","append","consumed","body","fileReaderReady","Promise","reject","resolve","reader","onload","result","readBlobAsArrayBuffer","FileReader","readBlobAsText","promise","readAsText","readArrayBufferAsText","view","chars","buf","join","length","bufferClone","i","slice","fromCharCode","buffer","Body","Uint8Array","byteLength","bodyUsed","_initBody","_bodyInit","_bodyBlob","_bodyText","_bodyArrayBuffer","FormData","Blob","get","Error","_bodyFormData","set","type","URLSearchParams","rejected","then","text","decode","json","JSON","parse","normalizeMethod","oldValue","hasOwnProperty","has","callback","thisArg","keys","values","entries","methods","options","method","upcased","TypeError","input","mode","signal","url","credentials","referrer","form","trim","split","bytes","parseHeaders","rawHeaders","shift","replace","decodeURIComponent","line","parts","key","bodyInit","status","clone","statusText","ok","error","response","redirectStatuses","RangeError","redirect","DOMException","location","err","exports","message","init","request","stack","constructor","abortXhr","xhr","aborted","onerror","getAllResponseHeaders","ontimeout","responseURL","responseText","withCredentials","responseType","setRequestHeader","addEventListener","readyState","removeEventListener","onreadystatechange","polyfill"],"mappings":"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","file":"fetch.js","sourcesContent":["var support = {\r\n    searchParams: 'URLSearchParams' in self,\r\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n    blob:\r\n      'FileReader' in self &&\r\n      'Blob' in self &&\r\n      (function() {\r\n          try {\r\n              new Blob()\r\n              return true\r\n          } catch (e) {\r\n              return false\r\n          }\r\n      })(),\r\n    formData: 'FormData' in self,\r\n    arrayBuffer: 'ArrayBuffer' in self\r\n}\r\n\r\nfunction isDataView(obj) {\r\n    return obj && DataView.prototype.isPrototypeOf(obj)\r\n}\r\n\r\nif (support.arrayBuffer) {\r\n    var viewClasses = [\r\n      '[object Int8Array]',\r\n      '[object Uint8Array]',\r\n      '[object Uint8ClampedArray]',\r\n      '[object Int16Array]',\r\n      '[object Uint16Array]',\r\n      '[object Int32Array]',\r\n      '[object Uint32Array]',\r\n      '[object Float32Array]',\r\n      '[object Float64Array]'\r\n    ]\r\n\r\n    var isArrayBufferView =\r\n      ArrayBuffer.isView ||\r\n      function(obj) {\r\n          return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\r\n      }\r\n}\r\n\r\nfunction normalizeName(name) {\r\n    if (typeof name !== 'string') {\r\n        name = String(name)\r\n    }\r\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\r\n        throw new TypeError('Invalid character in header field name')\r\n    }\r\n    return name.toLowerCase()\r\n}\r\n\r\nfunction normalizeValue(value) {\r\n    if (typeof value !== 'string') {\r\n        value = String(value)\r\n    }\r\n    return value\r\n}\r\n\r\n// Build a destructive iterator for the value list\r\nfunction iteratorFor(items) {\r\n    var iterator = {\r\n        next: function() {\r\n            var value = items.shift()\r\n            return {done: value === undefined, value: value}\r\n        }\r\n    }\r\n\r\n    if (support.iterable) {\r\n        iterator[Symbol.iterator] = function() {\r\n            return iterator\r\n        }\r\n    }\r\n\r\n    return iterator\r\n}\r\n\r\nexport function Headers(headers) {\r\n    this.map = {}\r\n\r\n    if (headers instanceof Headers) {\r\n        headers.forEach(function(value, name) {\r\n            this.append(name, value)\r\n        }, this)\r\n    } else if (Array.isArray(headers)) {\r\n        headers.forEach(function(header) {\r\n            this.append(header[0], header[1])\r\n        }, this)\r\n    } else if (headers) {\r\n        Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n            this.append(name, headers[name])\r\n        }, this)\r\n    }\r\n}\r\n\r\nHeaders.prototype.append = function(name, value) {\r\n    name = normalizeName(name)\r\n    value = normalizeValue(value)\r\n    var oldValue = this.map[name]\r\n    this.map[name] = oldValue ? oldValue + ', ' + value : value\r\n}\r\n\r\nHeaders.prototype['delete'] = function(name) {\r\n    delete this.map[normalizeName(name)]\r\n}\r\n\r\nHeaders.prototype.get = function(name) {\r\n    name = normalizeName(name)\r\n    return this.has(name) ? this.map[name] : null\r\n}\r\n\r\nHeaders.prototype.has = function(name) {\r\n    return this.map.hasOwnProperty(normalizeName(name))\r\n}\r\n\r\nHeaders.prototype.set = function(name, value) {\r\n    this.map[normalizeName(name)] = normalizeValue(value)\r\n}\r\n\r\nHeaders.prototype.forEach = function(callback, thisArg) {\r\n    for (var name in this.map) {\r\n        if (this.map.hasOwnProperty(name)) {\r\n            callback.call(thisArg, this.map[name], name, this)\r\n        }\r\n    }\r\n}\r\n\r\nHeaders.prototype.keys = function() {\r\n    var items = []\r\n    this.forEach(function(value, name) {\r\n        items.push(name)\r\n    })\r\n    return iteratorFor(items)\r\n}\r\n\r\nHeaders.prototype.values = function() {\r\n    var items = []\r\n    this.forEach(function(value) {\r\n        items.push(value)\r\n    })\r\n    return iteratorFor(items)\r\n}\r\n\r\nHeaders.prototype.entries = function() {\r\n    var items = []\r\n    this.forEach(function(value, name) {\r\n        items.push([name, value])\r\n    })\r\n    return iteratorFor(items)\r\n}\r\n\r\nif (support.iterable) {\r\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\r\n}\r\n\r\nfunction consumed(body) {\r\n    if (body.bodyUsed) {\r\n        return Promise.reject(new TypeError('Already read'))\r\n    }\r\n    body.bodyUsed = true\r\n}\r\n\r\nfunction fileReaderReady(reader) {\r\n    return new Promise(function(resolve, reject) {\r\n        reader.onload = function() {\r\n            resolve(reader.result)\r\n        }\r\n        reader.onerror = function() {\r\n            reject(reader.error)\r\n        }\r\n    })\r\n}\r\n\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    var reader = new FileReader()\r\n    var promise = fileReaderReady(reader)\r\n    reader.readAsArrayBuffer(blob)\r\n    return promise\r\n}\r\n\r\nfunction readBlobAsText(blob) {\r\n    var reader = new FileReader()\r\n    var promise = fileReaderReady(reader)\r\n    reader.readAsText(blob)\r\n    return promise\r\n}\r\n\r\nfunction readArrayBufferAsText(buf) {\r\n    var view = new Uint8Array(buf)\r\n    var chars = new Array(view.length)\r\n\r\n    for (var i = 0; i < view.length; i++) {\r\n        chars[i] = String.fromCharCode(view[i])\r\n    }\r\n    return chars.join('')\r\n}\r\n\r\nfunction bufferClone(buf) {\r\n    if (buf.slice) {\r\n        return buf.slice(0)\r\n    } else {\r\n        var view = new Uint8Array(buf.byteLength)\r\n        view.set(new Uint8Array(buf))\r\n        return view.buffer\r\n    }\r\n}\r\n\r\nfunction Body() {\r\n    this.bodyUsed = false\r\n\r\n    this._initBody = function(body) {\r\n        this._bodyInit = body\r\n        if (!body) {\r\n            this._bodyText = ''\r\n        } else if (typeof body === 'string') {\r\n            this._bodyText = body\r\n        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n            this._bodyBlob = body\r\n        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n            this._bodyFormData = body\r\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n            this._bodyText = body.toString()\r\n        } else if (support.arrayBuffer && support.blob && isDataView(body)) {\r\n            this._bodyArrayBuffer = bufferClone(body.buffer)\r\n            // IE 10-11 can't handle a DataView body.\r\n            this._bodyInit = new Blob([this._bodyArrayBuffer])\r\n        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\r\n            this._bodyArrayBuffer = bufferClone(body)\r\n        } else {\r\n            throw new Error('unsupported BodyInit type')\r\n        }\r\n\r\n        if (!this.headers.get('content-type')) {\r\n            if (typeof body === 'string') {\r\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\r\n            } else if (this._bodyBlob && this._bodyBlob.type) {\r\n                this.headers.set('content-type', this._bodyBlob.type)\r\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\r\n            }\r\n        }\r\n    }\r\n\r\n    if (support.blob) {\r\n        this.blob = function() {\r\n            var rejected = consumed(this)\r\n            if (rejected) {\r\n                return rejected\r\n            }\r\n\r\n            if (this._bodyBlob) {\r\n                return Promise.resolve(this._bodyBlob)\r\n            } else if (this._bodyArrayBuffer) {\r\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\r\n            } else if (this._bodyFormData) {\r\n                throw new Error('could not read FormData body as blob')\r\n            } else {\r\n                return Promise.resolve(new Blob([this._bodyText]))\r\n            }\r\n        }\r\n\r\n        this.arrayBuffer = function() {\r\n            if (this._bodyArrayBuffer) {\r\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\r\n            } else {\r\n                return this.blob().then(readBlobAsArrayBuffer)\r\n            }\r\n        }\r\n    }\r\n\r\n    this.text = function() {\r\n        var rejected = consumed(this)\r\n        if (rejected) {\r\n            return rejected\r\n        }\r\n\r\n        if (this._bodyBlob) {\r\n            return readBlobAsText(this._bodyBlob)\r\n        } else if (this._bodyArrayBuffer) {\r\n            return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\r\n        } else if (this._bodyFormData) {\r\n            throw new Error('could not read FormData body as text')\r\n        } else {\r\n            return Promise.resolve(this._bodyText)\r\n        }\r\n    }\r\n\r\n    if (support.formData) {\r\n        this.formData = function() {\r\n            return this.text().then(decode)\r\n        }\r\n    }\r\n\r\n    this.json = function() {\r\n        return this.text().then(JSON.parse)\r\n    }\r\n\r\n    return this\r\n}\r\n\r\n// HTTP methods whose capitalization should be normalized\r\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\r\n\r\nfunction normalizeMethod(method) {\r\n    var upcased = method.toUpperCase()\r\n    return methods.indexOf(upcased) > -1 ? upcased : method\r\n}\r\n\r\nexport function Request(input, options) {\r\n    options = options || {}\r\n    var body = options.body\r\n\r\n    if (input instanceof Request) {\r\n        if (input.bodyUsed) {\r\n            throw new TypeError('Already read')\r\n        }\r\n        this.url = input.url\r\n        this.credentials = input.credentials\r\n        if (!options.headers) {\r\n            this.headers = new Headers(input.headers)\r\n        }\r\n        this.method = input.method\r\n        this.mode = input.mode\r\n        this.signal = input.signal\r\n        if (!body && input._bodyInit != null) {\r\n            body = input._bodyInit\r\n            input.bodyUsed = true\r\n        }\r\n    } else {\r\n        this.url = String(input)\r\n    }\r\n\r\n    this.credentials = options.credentials || this.credentials || 'omit'\r\n    if (options.headers || !this.headers) {\r\n        this.headers = new Headers(options.headers)\r\n    }\r\n    this.method = normalizeMethod(options.method || this.method || 'GET')\r\n    this.mode = options.mode || this.mode || null\r\n    this.signal = options.signal || this.signal\r\n    this.referrer = null\r\n\r\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n        throw new TypeError('Body not allowed for GET or HEAD requests')\r\n    }\r\n    this._initBody(body)\r\n}\r\n\r\nRequest.prototype.clone = function() {\r\n    return new Request(this, {body: this._bodyInit})\r\n}\r\n\r\nfunction decode(body) {\r\n    var form = new FormData()\r\n    body\r\n      .trim()\r\n      .split('&')\r\n      .forEach(function(bytes) {\r\n          if (bytes) {\r\n              var split = bytes.split('=')\r\n              var name = split.shift().replace(/\\+/g, ' ')\r\n              var value = split.join('=').replace(/\\+/g, ' ')\r\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\r\n          }\r\n      })\r\n    return form\r\n}\r\n\r\nfunction parseHeaders(rawHeaders) {\r\n    var headers = new Headers()\r\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\r\n    // https://tools.ietf.org/html/rfc7230#section-3.2\r\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\r\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\r\n        var parts = line.split(':')\r\n        var key = parts.shift().trim()\r\n        if (key) {\r\n            var value = parts.join(':').trim()\r\n            headers.append(key, value)\r\n        }\r\n    })\r\n    return headers\r\n}\r\n\r\nBody.call(Request.prototype)\r\n\r\nexport function Response(bodyInit, options) {\r\n    if (!options) {\r\n        options = {}\r\n    }\r\n\r\n    this.type = 'default'\r\n    this.status = options.status === undefined ? 200 : options.status\r\n    this.ok = this.status >= 200 && this.status < 300\r\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\r\n    this.headers = new Headers(options.headers)\r\n    this.url = options.url || ''\r\n    this._initBody(bodyInit)\r\n}\r\n\r\nBody.call(Response.prototype)\r\n\r\nResponse.prototype.clone = function() {\r\n    return new Response(this._bodyInit, {\r\n        status: this.status,\r\n        statusText: this.statusText,\r\n        headers: new Headers(this.headers),\r\n        url: this.url\r\n    })\r\n}\r\n\r\nResponse.error = function() {\r\n    var response = new Response(null, {status: 0, statusText: ''})\r\n    response.type = 'error'\r\n    return response\r\n}\r\n\r\nvar redirectStatuses = [301, 302, 303, 307, 308]\r\n\r\nResponse.redirect = function(url, status) {\r\n    if (redirectStatuses.indexOf(status) === -1) {\r\n        throw new RangeError('Invalid status code')\r\n    }\r\n\r\n    return new Response(null, {status: status, headers: {location: url}})\r\n}\r\n\r\nexport var DOMException = self.DOMException\r\ntry {\r\n    new DOMException()\r\n} catch (err) {\r\n    DOMException = function(message, name) {\r\n        this.message = message\r\n        this.name = name\r\n        var error = Error(message)\r\n        this.stack = error.stack\r\n    }\r\n    DOMException.prototype = Object.create(Error.prototype)\r\n    DOMException.prototype.constructor = DOMException\r\n}\r\n\r\nexport function fetch(input, init) {\r\n    return new Promise(function(resolve, reject) {\r\n        var request = new Request(input, init)\r\n\r\n        if (request.signal && request.signal.aborted) {\r\n            return reject(new DOMException('Aborted', 'AbortError'))\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest()\r\n\r\n        function abortXhr() {\r\n            xhr.abort()\r\n        }\r\n\r\n        xhr.onload = function() {\r\n            var options = {\r\n                status: xhr.status,\r\n                statusText: xhr.statusText,\r\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\r\n            }\r\n            options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\r\n            var body = 'response' in xhr ? xhr.response : xhr.responseText\r\n            resolve(new Response(body, options))\r\n        }\r\n\r\n        xhr.onerror = function() {\r\n            reject(new TypeError('Network request failed'))\r\n        }\r\n\r\n        xhr.ontimeout = function() {\r\n            reject(new TypeError('Network request failed'))\r\n        }\r\n\r\n        xhr.onabort = function() {\r\n            reject(new DOMException('Aborted', 'AbortError'))\r\n        }\r\n\r\n        xhr.open(request.method, request.url, true)\r\n\r\n        if (request.credentials === 'include') {\r\n            xhr.withCredentials = true\r\n        } else if (request.credentials === 'omit') {\r\n            xhr.withCredentials = false\r\n        }\r\n\r\n        if ('responseType' in xhr && support.blob) {\r\n            xhr.responseType = 'blob'\r\n        }\r\n\r\n        request.headers.forEach(function(value, name) {\r\n            xhr.setRequestHeader(name, value)\r\n        })\r\n\r\n        if (request.signal) {\r\n            request.signal.addEventListener('abort', abortXhr)\r\n\r\n            xhr.onreadystatechange = function() {\r\n                // DONE (success or failure)\r\n                if (xhr.readyState === 4) {\r\n                    request.signal.removeEventListener('abort', abortXhr)\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\r\n    })\r\n}\r\n\r\nfetch.polyfill = true\r\n\r\nif (!self.fetch) {\r\n    self.fetch = fetch\r\n    self.Headers = Headers\r\n    self.Request = Request\r\n    self.Response = Response\r\n}"]}